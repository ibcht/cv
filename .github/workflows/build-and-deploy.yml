# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["feature/cv2"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout
        uses: actions/checkout@v4
      - name: Calculate current ISO time
        id: get_current_time
        run: echo "last_modified=$(date -Iminutes)" >> "$GITHUB_OUTPUT"
      - name: Update resume lastModified date
        id: lookupSdkVersion
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.meta.lastModified = "${{ steps.get_current_time.outputs.last_modified }}"' resume.yml
      - name: Commit the change
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: resume.yml has been lastModified on ${{ steps.get_current_time.outputs.last_modified }}
      - name: Jinja2 Action
        # You may pin to the exact commit or the version.
        # uses: cuchi/jinja2-action@1149b92d9ea6db61d7f71c22e3d5028d8065f140
        uses: cuchi/jinja2-action@v1.2.0
        with:
          # 
          template: index.html.j2
          # 
          output_file: www/index.html
          # Fails on missing values
          #strict: true
          # 
          # See "data_format" for supported formats
          data_file: resume.yml
          # To be used with the "data_file" input, can be one of: env, ini, yaml or json
          #data_format: yaml
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: 'www'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
